// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ROLE { 
  USER
  ADMIN
}

enum ADMIN_ROLE {
  SUPER_CREATOR
  SUPER_ACCEPTOR
  ADMIN
}

model Admin { 
  id String @id @default(uuid())
  email String @unique
  password String
  role ADMIN_ROLE @default(ADMIN)
  hashedRt String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User{
  id String @id @default(uuid())
  email String @unique
  password String
  role ROLE @default(USER)
  hashedRt String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  routes Route[]
}

model Point{
  id String @id @default(uuid())
  name String
  lat String
  lon String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  routes Route[]
}

model Route{ 
  id String @id @default(uuid())
  name String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String 
  points Point[]
  images Image[]
}

model Image{
  id String @id @default(uuid())
  uriPath String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  route Route[]
}

enum ADMIN_CODE_STATUS {
  WAITING_FOR_APPROVAL
  APPROVED
  USED
}

model AdminRegistrationCode{
  id String @id @default(uuid())
  recipientEmail String
  codeHash String
  status ADMIN_CODE_STATUS @default(WAITING_FOR_APPROVAL)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}